@page "/panel"

<h3>Panel</h3>

<p>
    The panel defines a group of elements that need to be highlighted.
</p>

@if (form == null)
{
    <p>Generating form...</p>
}
else
{
    <Survey Form="form" ShowDebug="true" OnFormValuesChanged="OnFormValuesChanges"
        OnFormSubmitted="OnFormSubmitted" OnFormSubmittedError="OnFormSubmittedError" />
}

<div class="space50"></div>

@code {
    Form form;
    string CSVTemplate;

    CSVGenerator csv = new CSVGenerator();

    protected override async Task OnInitializedAsync()
    {
        form = new Form()
            {
            Elements = new List<IElement>()
            {
                new Panel() {
                    Name="pnl1",
                    Title = "This is a panel",
                    Description = "Panel example that conains other elements",
                    PanelElements = new List<IElement>()
                    {
                        new Textbox() { Title = "Username", PlaceHolder = "Enter your new name", Name = "txtNewName",
                            Description = "Insert your new name", IsRequired = true },
                        new Textbox() {
                            Title = "Password", PlaceHolder = "Enter your password", Name = "txtPassword", IsRequired = true,
                            TextboxType = PSC.Survey.Shared.Enums.TextboxType.Password
                        },
                        new LikertSkill() { Name = "lsk1", Title = "Liker Skill", LikertSkirtType = PSC.Survey.Shared.Enums.LikertSkillType.Agree }
                    }
                },
                new Panel() {
                    Name="pnl1",
                    Title = "This is a second panel",
                    Description = "Panel example that conains other elements",
                    BackgroundColor = "#c0c0c0",
                    PanelElements = new List<IElement>()
                    {
                        new Textbox() { Title = "Username", PlaceHolder = "Enter your new name", Name = "txtNewName",
                            Description = "Insert your new name", IsRequired = true },
                        new Textbox() {
                            Title = "Password", PlaceHolder = "Enter your password", Name = "txtPassword", IsRequired = true,
                            TextboxType = PSC.Survey.Shared.Enums.TextboxType.Password
                        }
                    }
                }

            }
        };
    }

    private void OnFormValuesChanges()
    {
        CSVTemplate = csv.GetColumnsTemplate(form);
    }

    private async Task OnFormSubmitted(FormSubmittedEventArgs e)
    {
        CSVTemplate = csv.GetCSV(form.Elements, e.RawValues).Replace("\n", "<br>");
    }

    private async Task OnFormSubmittedError()
    {
    }
}